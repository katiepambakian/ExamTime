/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this
license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.kap.UserInterface;

import com.kap.examtimetabling.extras.readFromDatabase;
import static com.kap.examtimetabling.extras.writeToDatabase.writeToDatabase;
import java.util.List;
import javax.swing.JOptionPane;
import org.apache.commons.lang3.StringUtils;
import java.util.Random;

/**
 *
 * @author katiepambakian
 */
public class LoginScreen extends javax.swing.JFrame {
    
    private static List<String> id;
    
    public static List<String> getId(){
        return id;
    }

    /**
     * Creates new form LoginScreen
     */
    public LoginScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel13 = new javax.swing.JLabel();
        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDialog3 = new javax.swing.JDialog();
        jDialog4 = new javax.swing.JDialog();
        SignUpLogIN = new javax.swing.JPanel();
        SignInPanel = new javax.swing.JPanel();
        usernametb = new javax.swing.JTextField();
        SubmitSignIn = new javax.swing.JButton();
        SignUpBt = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        passwordtbHidden = new javax.swing.JPasswordField();
        SignUpPanel = new javax.swing.JPanel();
        StudentSignUpPanel = new javax.swing.JPanel();
        firstNameStudent_lb = new javax.swing.JTextField();
        lastNameStudent_lb = new javax.swing.JTextField();
        schoolidStudent_lb = new javax.swing.JTextField();
        passwordStudent_lb = new javax.swing.JTextField();
        passwordConfirmStudent_lb = new javax.swing.JTextField();
        firstname_lb = new javax.swing.JLabel();
        lastName_lb = new javax.swing.JLabel();
        schoolId_lb = new javax.swing.JLabel();
        password_lb = new javax.swing.JLabel();
        confirmpassword_lb = new javax.swing.JLabel();
        sidePanelStudent = new javax.swing.JPanel();
        backStudent_bt = new javax.swing.JButton();
        submitStudent_bt = new javax.swing.JButton();
        StudentSignUp = new javax.swing.JLabel();
        DefultPanel = new javax.swing.JPanel();
        staffbt = new javax.swing.JButton();
        studentbt = new javax.swing.JButton();
        homeScreenBackButton = new javax.swing.JButton();
        adminBt = new javax.swing.JButton();
        AdminSignUpPanel = new javax.swing.JPanel();
        schoolNameAdmin_tb = new javax.swing.JTextField();
        passwordAdmin_tb = new javax.swing.JTextField();
        schoolName = new javax.swing.JLabel();
        sidePanelAdmin = new javax.swing.JPanel();
        backButtonAdmin = new javax.swing.JButton();
        submitAdminbt = new javax.swing.JButton();
        SchoolSignUplb = new javax.swing.JLabel();
        passwordAdmin_lb = new javax.swing.JLabel();
        passwordConfirm = new javax.swing.JLabel();
        confirmPasswordAdmin_lb = new javax.swing.JTextField();
        StaffPanel = new javax.swing.JPanel();
        firstNameStaff_tb = new javax.swing.JTextField();
        lastNameStaff_tb = new javax.swing.JTextField();
        schoolIDstaff_tb = new javax.swing.JTextField();
        passwordConfirmtStaff_tb = new javax.swing.JTextField();
        passwordConfirmationStaff_tb = new javax.swing.JTextField();
        firstname = new javax.swing.JLabel();
        lastname = new javax.swing.JLabel();
        schoolid = new javax.swing.JLabel();
        password1lb = new javax.swing.JLabel();
        confirmpassword1lb = new javax.swing.JLabel();
        signPanelStaff = new javax.swing.JPanel();
        back_staff_bt = new javax.swing.JButton();
        staffSubmit_bt = new javax.swing.JButton();
        StaffSignUP = new javax.swing.JLabel();

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("STUDENT SIGN UP");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 102));
        setResizable(false);

        SignUpLogIN.setLayout(new java.awt.CardLayout());

        SignInPanel.setBackground(new java.awt.Color(0, 51, 102));

        usernametb.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        usernametb.setText("Username");
        usernametb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usernametbMouseClicked(evt);
            }
        });
        usernametb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernametbActionPerformed(evt);
            }
        });

        SubmitSignIn.setBackground(new java.awt.Color(0, 51, 102));
        SubmitSignIn.setFont(new java.awt.Font("InaiMathi", 1, 13)); // NOI18N
        SubmitSignIn.setForeground(new java.awt.Color(255, 153, 102));
        SubmitSignIn.setText("Sign In");
        SubmitSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitSignInActionPerformed(evt);
            }
        });

        SignUpBt.setBackground(new java.awt.Color(0, 51, 102));
        SignUpBt.setFont(new java.awt.Font("InaiMathi", 1, 13)); // NOI18N
        SignUpBt.setForeground(new java.awt.Color(255, 153, 102));
        SignUpBt.setText("Sign Up");
        SignUpBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpBtActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setLabelFor(SignUpBt);
        jLabel1.setText("New ... make a new acount");

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 1, 70)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("EXAMTIME");

        passwordtbHidden.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        passwordtbHidden.setText("Passowrd");
        passwordtbHidden.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordtbHiddenMouseClicked(evt);
            }
        });
        passwordtbHidden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordtbHiddenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SignInPanelLayout = new javax.swing.GroupLayout(SignInPanel);
        SignInPanel.setLayout(SignInPanelLayout);
        SignInPanelLayout.setHorizontalGroup(
            SignInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignInPanelLayout.createSequentialGroup()
                .addGroup(SignInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SignInPanelLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SignInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(SignInPanelLayout.createSequentialGroup()
                            .addGap(264, 264, 264)
                            .addGroup(SignInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(SubmitSignIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SignUpBt, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)))
                        .addGroup(SignInPanelLayout.createSequentialGroup()
                            .addGap(237, 237, 237)
                            .addComponent(jLabel1)))
                    .addGroup(SignInPanelLayout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addGroup(SignInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(usernametb, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                            .addComponent(passwordtbHidden))))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        SignInPanelLayout.setVerticalGroup(
            SignInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignInPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(usernametb, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordtbHidden, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SubmitSignIn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SignUpBt)
                .addGap(22, 22, 22))
        );

        SignUpLogIN.add(SignInPanel, "card2");

        SignUpPanel.setBackground(new java.awt.Color(0, 51, 102));
        SignUpPanel.setPreferredSize(new java.awt.Dimension(612, 418));
        SignUpPanel.setLayout(new java.awt.CardLayout());

        StudentSignUpPanel.setBackground(new java.awt.Color(0, 51, 102));
        StudentSignUpPanel.setPreferredSize(new java.awt.Dimension(612, 418));

        firstNameStudent_lb.setText("firstname ");
        firstNameStudent_lb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                firstNameStudent_lbMouseClicked(evt);
            }
        });
        firstNameStudent_lb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameStudent_lbActionPerformed(evt);
            }
        });

        lastNameStudent_lb.setText("lastname");
        lastNameStudent_lb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lastNameStudent_lbMouseClicked(evt);
            }
        });

        schoolidStudent_lb.setText("schoolID");
        schoolidStudent_lb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                schoolidStudent_lbMouseClicked(evt);
            }
        });
        schoolidStudent_lb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schoolidStudent_lbActionPerformed(evt);
            }
        });

        passwordStudent_lb.setText("password");
        passwordStudent_lb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordStudent_lbMouseClicked(evt);
            }
        });
        passwordStudent_lb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordStudent_lbActionPerformed(evt);
            }
        });

        passwordConfirmStudent_lb.setText("password");
        passwordConfirmStudent_lb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordConfirmStudent_lbMouseClicked(evt);
            }
        });
        passwordConfirmStudent_lb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordConfirmStudent_lbActionPerformed(evt);
            }
        });

        firstname_lb.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        firstname_lb.setForeground(new java.awt.Color(255, 255, 255));
        firstname_lb.setText("First Name:");

        lastName_lb.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lastName_lb.setForeground(new java.awt.Color(255, 255, 255));
        lastName_lb.setText("Last Name:");

        schoolId_lb.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        schoolId_lb.setForeground(new java.awt.Color(255, 255, 255));
        schoolId_lb.setText("SchoolID:");

        password_lb.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        password_lb.setForeground(new java.awt.Color(255, 255, 255));
        password_lb.setText("Password:");

        confirmpassword_lb.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        confirmpassword_lb.setForeground(new java.awt.Color(255, 255, 255));
        confirmpassword_lb.setText("Confirm password:");

        sidePanelStudent.setBackground(new java.awt.Color(255, 153, 102));

        backStudent_bt.setText("Back");
        backStudent_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backStudent_btActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidePanelStudentLayout = new javax.swing.GroupLayout(sidePanelStudent);
        sidePanelStudent.setLayout(sidePanelStudentLayout);
        sidePanelStudentLayout.setHorizontalGroup(
            sidePanelStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelStudentLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(backStudent_bt)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        sidePanelStudentLayout.setVerticalGroup(
            sidePanelStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelStudentLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(backStudent_bt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        submitStudent_bt.setBackground(new java.awt.Color(255, 153, 102));
        submitStudent_bt.setText("SUBMIT");
        submitStudent_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitStudent_btActionPerformed(evt);
            }
        });

        StudentSignUp.setBackground(new java.awt.Color(0, 0, 0));
        StudentSignUp.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        StudentSignUp.setForeground(new java.awt.Color(255, 255, 255));
        StudentSignUp.setText("STUDENT SIGN UP");

        javax.swing.GroupLayout StudentSignUpPanelLayout = new javax.swing.GroupLayout(StudentSignUpPanel);
        StudentSignUpPanel.setLayout(StudentSignUpPanelLayout);
        StudentSignUpPanelLayout.setHorizontalGroup(
            StudentSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StudentSignUpPanelLayout.createSequentialGroup()
                .addComponent(sidePanelStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(StudentSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StudentSignUpPanelLayout.createSequentialGroup()
                        .addGroup(StudentSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StudentSignUpPanelLayout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addGroup(StudentSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lastName_lb)
                                    .addComponent(firstname_lb)
                                    .addComponent(schoolId_lb)
                                    .addComponent(password_lb)))
                            .addGroup(StudentSignUpPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(confirmpassword_lb)))
                        .addGap(18, 18, 18)
                        .addGroup(StudentSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameStudent_lb)
                            .addComponent(firstNameStudent_lb)
                            .addComponent(passwordConfirmStudent_lb, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordStudent_lb)
                            .addComponent(schoolidStudent_lb))
                        .addGap(166, 166, 166))
                    .addGroup(StudentSignUpPanelLayout.createSequentialGroup()
                        .addGroup(StudentSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StudentSignUpPanelLayout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addComponent(submitStudent_bt))
                            .addGroup(StudentSignUpPanelLayout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addComponent(StudentSignUp)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        StudentSignUpPanelLayout.setVerticalGroup(
            StudentSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sidePanelStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(StudentSignUpPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(StudentSignUp)
                .addGap(31, 31, 31)
                .addGroup(StudentSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstname_lb)
                    .addComponent(firstNameStudent_lb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(StudentSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastName_lb)
                    .addComponent(lastNameStudent_lb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(StudentSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schoolId_lb)
                    .addComponent(schoolidStudent_lb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(StudentSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password_lb)
                    .addComponent(passwordStudent_lb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(StudentSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmpassword_lb)
                    .addComponent(passwordConfirmStudent_lb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(submitStudent_bt)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        SignUpPanel.add(StudentSignUpPanel, "card3");

        DefultPanel.setBackground(new java.awt.Color(0, 51, 102));

        staffbt.setFont(new java.awt.Font("Kailasa", 1, 15)); // NOI18N
        staffbt.setText("Staff Account");
        staffbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffbtActionPerformed(evt);
            }
        });

        studentbt.setFont(new java.awt.Font("Kailasa", 1, 15)); // NOI18N
        studentbt.setText("Student Account");
        studentbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentbtActionPerformed(evt);
            }
        });

        homeScreenBackButton.setText("back to login screen");
        homeScreenBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeScreenBackButtonActionPerformed(evt);
            }
        });

        adminBt.setFont(new java.awt.Font("Kailasa", 1, 15)); // NOI18N
        adminBt.setText("Admin Account");
        adminBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminBtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DefultPanelLayout = new javax.swing.GroupLayout(DefultPanel);
        DefultPanel.setLayout(DefultPanelLayout);
        DefultPanelLayout.setHorizontalGroup(
            DefultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DefultPanelLayout.createSequentialGroup()
                .addGroup(DefultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DefultPanelLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(staffbt)
                        .addGap(49, 49, 49)
                        .addComponent(studentbt))
                    .addGroup(DefultPanelLayout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addGroup(DefultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(homeScreenBackButton)
                            .addComponent(adminBt))))
                .addContainerGap(163, Short.MAX_VALUE))
        );
        DefultPanelLayout.setVerticalGroup(
            DefultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DefultPanelLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addGroup(DefultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffbt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentbt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(adminBt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(homeScreenBackButton)
                .addGap(47, 47, 47))
        );

        SignUpPanel.add(DefultPanel, "card2");

        AdminSignUpPanel.setBackground(new java.awt.Color(0, 51, 102));

        schoolNameAdmin_tb.setText("School Name");
        schoolNameAdmin_tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                schoolNameAdmin_tbMouseClicked(evt);
            }
        });
        schoolNameAdmin_tb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schoolNameAdmin_tbActionPerformed(evt);
            }
        });

        passwordAdmin_tb.setText("Password");
        passwordAdmin_tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordAdmin_tbMouseClicked(evt);
            }
        });
        passwordAdmin_tb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordAdmin_tbActionPerformed(evt);
            }
        });

        schoolName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        schoolName.setForeground(new java.awt.Color(255, 255, 255));
        schoolName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        schoolName.setText("School Name:");

        sidePanelAdmin.setBackground(new java.awt.Color(255, 153, 102));

        backButtonAdmin.setText("Back");
        backButtonAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidePanelAdminLayout = new javax.swing.GroupLayout(sidePanelAdmin);
        sidePanelAdmin.setLayout(sidePanelAdminLayout);
        sidePanelAdminLayout.setHorizontalGroup(
            sidePanelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelAdminLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(backButtonAdmin)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        sidePanelAdminLayout.setVerticalGroup(
            sidePanelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelAdminLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(backButtonAdmin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        submitAdminbt.setBackground(new java.awt.Color(255, 153, 102));
        submitAdminbt.setText("SUBMIT");
        submitAdminbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitAdminbtActionPerformed(evt);
            }
        });

        SchoolSignUplb.setBackground(new java.awt.Color(0, 0, 0));
        SchoolSignUplb.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        SchoolSignUplb.setForeground(new java.awt.Color(255, 255, 255));
        SchoolSignUplb.setText("SCHOOL SIGN UP");

        passwordAdmin_lb.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        passwordAdmin_lb.setForeground(new java.awt.Color(255, 255, 255));
        passwordAdmin_lb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        passwordAdmin_lb.setText("Password:");

        passwordConfirm.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        passwordConfirm.setForeground(new java.awt.Color(255, 255, 255));
        passwordConfirm.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        passwordConfirm.setText("Confirm Password:");

        confirmPasswordAdmin_lb.setText("Confirm Password");
        confirmPasswordAdmin_lb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmPasswordAdmin_lbMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout AdminSignUpPanelLayout = new javax.swing.GroupLayout(AdminSignUpPanel);
        AdminSignUpPanel.setLayout(AdminSignUpPanelLayout);
        AdminSignUpPanelLayout.setHorizontalGroup(
            AdminSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminSignUpPanelLayout.createSequentialGroup()
                .addComponent(sidePanelAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(AdminSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdminSignUpPanelLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(SchoolSignUplb))
                    .addGroup(AdminSignUpPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(AdminSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(passwordAdmin_lb, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(schoolName, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordConfirm))
                        .addGap(18, 18, 18)
                        .addGroup(AdminSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(submitAdminbt)
                            .addGroup(AdminSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(passwordAdmin_tb)
                                .addComponent(confirmPasswordAdmin_lb)
                                .addComponent(schoolNameAdmin_tb, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)))))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        AdminSignUpPanelLayout.setVerticalGroup(
            AdminSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sidePanelAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(AdminSignUpPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(SchoolSignUplb)
                .addGap(31, 31, 31)
                .addGroup(AdminSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schoolName)
                    .addComponent(schoolNameAdmin_tb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(AdminSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordAdmin_lb)
                    .addComponent(passwordAdmin_tb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(AdminSignUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordConfirm)
                    .addComponent(confirmPasswordAdmin_lb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(submitAdminbt)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        SignUpPanel.add(AdminSignUpPanel, "card3");

        StaffPanel.setBackground(new java.awt.Color(0, 51, 102));

        firstNameStaff_tb.setText("firstname ");
        firstNameStaff_tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                firstNameStaff_tbMouseClicked(evt);
            }
        });

        lastNameStaff_tb.setText("lastname");
        lastNameStaff_tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lastNameStaff_tbMouseClicked(evt);
            }
        });

        schoolIDstaff_tb.setText("schoolID");
        schoolIDstaff_tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                schoolIDstaff_tbMouseClicked(evt);
            }
        });
        schoolIDstaff_tb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schoolIDstaff_tbActionPerformed(evt);
            }
        });

        passwordConfirmtStaff_tb.setText("password");
        passwordConfirmtStaff_tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordConfirmtStaff_tbMouseClicked(evt);
            }
        });
        passwordConfirmtStaff_tb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordConfirmtStaff_tbActionPerformed(evt);
            }
        });

        passwordConfirmationStaff_tb.setText("password");
        passwordConfirmationStaff_tb.setActionCommand("<Not Set>");
        passwordConfirmationStaff_tb.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        passwordConfirmationStaff_tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordConfirmationStaff_tbMouseClicked(evt);
            }
        });
        passwordConfirmationStaff_tb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordConfirmationStaff_tbActionPerformed(evt);
            }
        });

        firstname.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        firstname.setForeground(new java.awt.Color(255, 255, 255));
        firstname.setLabelFor(lastNameStaff_tb);
        firstname.setText("First Name:");

        lastname.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lastname.setForeground(new java.awt.Color(255, 255, 255));
        lastname.setLabelFor(lastNameStaff_tb);
        lastname.setText("Last Name:");

        schoolid.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        schoolid.setForeground(new java.awt.Color(255, 255, 255));
        schoolid.setText("SchoolID:");

        password1lb.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        password1lb.setForeground(new java.awt.Color(255, 255, 255));
        password1lb.setText("Password:");

        confirmpassword1lb.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        confirmpassword1lb.setForeground(new java.awt.Color(255, 255, 255));
        confirmpassword1lb.setText("Confirm password:");

        signPanelStaff.setBackground(new java.awt.Color(255, 153, 102));

        back_staff_bt.setText("Back");
        back_staff_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_staff_btActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout signPanelStaffLayout = new javax.swing.GroupLayout(signPanelStaff);
        signPanelStaff.setLayout(signPanelStaffLayout);
        signPanelStaffLayout.setHorizontalGroup(
            signPanelStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signPanelStaffLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(back_staff_bt)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        signPanelStaffLayout.setVerticalGroup(
            signPanelStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signPanelStaffLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(back_staff_bt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        staffSubmit_bt.setBackground(new java.awt.Color(255, 153, 102));
        staffSubmit_bt.setText("SUBMIT");
        staffSubmit_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffSubmit_btActionPerformed(evt);
            }
        });

        StaffSignUP.setBackground(new java.awt.Color(0, 0, 0));
        StaffSignUP.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        StaffSignUP.setForeground(new java.awt.Color(255, 255, 255));
        StaffSignUP.setText("STAFF SIGN UP");

        javax.swing.GroupLayout StaffPanelLayout = new javax.swing.GroupLayout(StaffPanel);
        StaffPanel.setLayout(StaffPanelLayout);
        StaffPanelLayout.setHorizontalGroup(
            StaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StaffPanelLayout.createSequentialGroup()
                .addComponent(signPanelStaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(StaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StaffPanelLayout.createSequentialGroup()
                        .addGroup(StaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StaffPanelLayout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addGroup(StaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lastname)
                                    .addComponent(firstname)
                                    .addComponent(schoolid)
                                    .addComponent(password1lb)))
                            .addGroup(StaffPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(confirmpassword1lb)))
                        .addGap(18, 18, 18)
                        .addGroup(StaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameStaff_tb)
                            .addComponent(firstNameStaff_tb)
                            .addComponent(passwordConfirmationStaff_tb, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordConfirmtStaff_tb)
                            .addComponent(schoolIDstaff_tb))
                        .addGap(166, 166, 166))
                    .addGroup(StaffPanelLayout.createSequentialGroup()
                        .addGroup(StaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StaffPanelLayout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addComponent(staffSubmit_bt))
                            .addGroup(StaffPanelLayout.createSequentialGroup()
                                .addGap(153, 153, 153)
                                .addComponent(StaffSignUP)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        StaffPanelLayout.setVerticalGroup(
            StaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(signPanelStaff, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(StaffPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(StaffSignUP)
                .addGap(36, 36, 36)
                .addGroup(StaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstname)
                    .addComponent(firstNameStaff_tb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(StaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastname)
                    .addComponent(lastNameStaff_tb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(StaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schoolid)
                    .addComponent(schoolIDstaff_tb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(StaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password1lb)
                    .addComponent(passwordConfirmtStaff_tb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(StaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmpassword1lb)
                    .addComponent(passwordConfirmationStaff_tb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(staffSubmit_bt)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        SignUpPanel.add(StaffPanel, "card3");

        SignUpLogIN.add(SignUpPanel, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(SignUpLogIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(SignUpLogIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitSignInActionPerformed
        // TODO add your handling code here:
        login();
    }//GEN-LAST:event_SubmitSignInActionPerformed

    private void SignUpBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpBtActionPerformed
        // TODO add your handling code here:
        SignUpLogIN.removeAll();
        SignUpLogIN.add(SignUpPanel);
        SignUpLogIN.repaint();
        SignUpLogIN.revalidate();
        SignUpPanel.removeAll();
        SignUpPanel.add(DefultPanel);
        SignUpPanel.repaint();
        SignUpPanel.revalidate();
    }//GEN-LAST:event_SignUpBtActionPerformed

    private void staffbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffbtActionPerformed
        // TODO add your handling code here:
        SignUpPanel.removeAll();
        SignUpPanel.add(StaffPanel);
        SignUpPanel.repaint();
        SignUpPanel.revalidate();
    }//GEN-LAST:event_staffbtActionPerformed

    private void studentbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentbtActionPerformed
        // TODO add your handling code here:
        SignUpPanel.removeAll();
        SignUpPanel.add(StudentSignUpPanel);
        SignUpPanel.repaint();
        SignUpPanel.revalidate();
    }//GEN-LAST:event_studentbtActionPerformed

    private void usernametbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernametbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernametbActionPerformed

    private void usernametbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernametbMouseClicked
        // TODO add your handling code here:
        usernametb.setText("");
    }//GEN-LAST:event_usernametbMouseClicked

    private void schoolIDstaff_tbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schoolIDstaff_tbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_schoolIDstaff_tbActionPerformed

    private void passwordConfirmtStaff_tbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordConfirmtStaff_tbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordConfirmtStaff_tbActionPerformed

    private void passwordConfirmationStaff_tbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordConfirmationStaff_tbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordConfirmationStaff_tbActionPerformed

    //the staff sign up
    private void staffSubmit_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffSubmit_btActionPerformed
        // TODO add your handling code here:
        staffSignUp();
    }//GEN-LAST:event_staffSubmit_btActionPerformed
    //staff back button 
    private void back_staff_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_staff_btActionPerformed
        // TODO add your handling code here:
        cleanUpRoutineStaff();
        SignUpPanel.removeAll();
        SignUpPanel.add(DefultPanel);
        SignUpPanel.repaint();
        SignUpPanel.revalidate();
    }//GEN-LAST:event_back_staff_btActionPerformed

    private void adminBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminBtActionPerformed
        // TODO add your handling code here:
        SignUpLogIN.removeAll();
        SignUpLogIN.add(AdminSignUpPanel);
        SignUpLogIN.repaint();
        SignUpLogIN.revalidate();
    }//GEN-LAST:event_adminBtActionPerformed

    private void homeScreenBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeScreenBackButtonActionPerformed
        // TODO add your handling code here:
        SignUpLogIN.removeAll();
        SignUpLogIN.add(SignInPanel);
        SignUpLogIN.repaint();
        SignUpLogIN.revalidate();
    }//GEN-LAST:event_homeScreenBackButtonActionPerformed

    private void firstNameStaff_tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstNameStaff_tbMouseClicked
        // TODO add your handling code here:
        firstNameStaff_tb.setText("");
    }//GEN-LAST:event_firstNameStaff_tbMouseClicked

    private void lastNameStaff_tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastNameStaff_tbMouseClicked
        // TODO add your handling code here:
        lastNameStaff_tb.setText("");
    }//GEN-LAST:event_lastNameStaff_tbMouseClicked

    private void schoolIDstaff_tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_schoolIDstaff_tbMouseClicked
        // TODO add your handling code here:
        schoolIDstaff_tb.setText("");
    }//GEN-LAST:event_schoolIDstaff_tbMouseClicked

    private void passwordConfirmtStaff_tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordConfirmtStaff_tbMouseClicked
        // TODO add your handling code here:
        passwordConfirmtStaff_tb.setText("");
    }//GEN-LAST:event_passwordConfirmtStaff_tbMouseClicked

    private void passwordConfirmationStaff_tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordConfirmationStaff_tbMouseClicked
        // TODO add your handling code here:
        passwordConfirmationStaff_tb.setText("");
    }//GEN-LAST:event_passwordConfirmationStaff_tbMouseClicked

    private void schoolNameAdmin_tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_schoolNameAdmin_tbMouseClicked
        // TODO add your handling code here:
        schoolNameAdmin_tb.setText("");
    }//GEN-LAST:event_schoolNameAdmin_tbMouseClicked

    private void passwordAdmin_tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordAdmin_tbMouseClicked
        // TODO add your handling code here:
        passwordAdmin_tb.setText("");
    }//GEN-LAST:event_passwordAdmin_tbMouseClicked

    private void confirmPasswordAdmin_lbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmPasswordAdmin_lbMouseClicked
        // TODO add your handling code here:
        confirmPasswordAdmin_lb.setText("");
    }//GEN-LAST:event_confirmPasswordAdmin_lbMouseClicked

    private void submitStudent_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitStudent_btActionPerformed
        // TODO add your handling code here:
        studentSignUp();
    }//GEN-LAST:event_submitStudent_btActionPerformed
    //student back button
    private void backStudent_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backStudent_btActionPerformed
        // TODO add your handling code here:
        cleanUpRoutineStudents();
        SignUpPanel.removeAll();
        SignUpPanel.add(DefultPanel);
        SignUpPanel.repaint();
        SignUpPanel.revalidate();
    }//GEN-LAST:event_backStudent_btActionPerformed

    private void passwordConfirmStudent_lbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordConfirmStudent_lbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordConfirmStudent_lbActionPerformed

    private void passwordConfirmStudent_lbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordConfirmStudent_lbMouseClicked
        // TODO add your handling code here:
        passwordConfirmStudent_lb.setText("");
    }//GEN-LAST:event_passwordConfirmStudent_lbMouseClicked

    private void passwordStudent_lbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordStudent_lbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordStudent_lbActionPerformed

    private void passwordStudent_lbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordStudent_lbMouseClicked
        // TODO add your handling code here:
        passwordStudent_lb.setText("");
    }//GEN-LAST:event_passwordStudent_lbMouseClicked

    private void schoolidStudent_lbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schoolidStudent_lbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_schoolidStudent_lbActionPerformed

    private void schoolidStudent_lbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_schoolidStudent_lbMouseClicked
        // TODO add your handling code here:
        schoolidStudent_lb.setText("");
    }//GEN-LAST:event_schoolidStudent_lbMouseClicked

    private void lastNameStudent_lbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastNameStudent_lbMouseClicked
        // TODO add your handling code here:
        lastNameStudent_lb.setText("");
    }//GEN-LAST:event_lastNameStudent_lbMouseClicked

    private void firstNameStudent_lbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstNameStudent_lbMouseClicked
        // TODO add your handling code here:
        firstNameStudent_lb.setText("");
    }//GEN-LAST:event_firstNameStudent_lbMouseClicked

    private void backButtonAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonAdminActionPerformed
        // TODO add your handling code here:
        cleanUpRoutineAdmin();
        SignUpLogIN.removeAll();
        SignUpLogIN.add(SignUpPanel);
        SignUpLogIN.repaint();
        SignUpLogIN.revalidate();
        SignUpPanel.removeAll();
        SignUpPanel.add(DefultPanel);
        SignUpPanel.repaint();
        SignUpPanel.revalidate();
    }//GEN-LAST:event_backButtonAdminActionPerformed

    private void submitAdminbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitAdminbtActionPerformed
        // TODO add your handling code here:
        AdminSignUp();
    }//GEN-LAST:event_submitAdminbtActionPerformed

    private void passwordAdmin_tbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordAdmin_tbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordAdmin_tbActionPerformed

    private void firstNameStudent_lbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameStudent_lbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameStudent_lbActionPerformed

    private void schoolNameAdmin_tbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schoolNameAdmin_tbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_schoolNameAdmin_tbActionPerformed

    private void passwordtbHiddenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordtbHiddenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordtbHiddenActionPerformed

    private void passwordtbHiddenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordtbHiddenMouseClicked
        // TODO add your handling code here:
        passwordtbHidden.setText("");
    }//GEN-LAST:event_passwordtbHiddenMouseClicked
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginScreen().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdminSignUpPanel;
    private javax.swing.JPanel DefultPanel;
    private javax.swing.JLabel SchoolSignUplb;
    private javax.swing.JPanel SignInPanel;
    private javax.swing.JButton SignUpBt;
    private javax.swing.JPanel SignUpLogIN;
    private javax.swing.JPanel SignUpPanel;
    private javax.swing.JPanel StaffPanel;
    private javax.swing.JLabel StaffSignUP;
    private javax.swing.JLabel StudentSignUp;
    private javax.swing.JPanel StudentSignUpPanel;
    private javax.swing.JButton SubmitSignIn;
    private javax.swing.JButton adminBt;
    private javax.swing.JButton backButtonAdmin;
    private javax.swing.JButton backStudent_bt;
    private javax.swing.JButton back_staff_bt;
    private javax.swing.JTextField confirmPasswordAdmin_lb;
    private javax.swing.JLabel confirmpassword1lb;
    private javax.swing.JLabel confirmpassword_lb;
    private javax.swing.JTextField firstNameStaff_tb;
    private javax.swing.JTextField firstNameStudent_lb;
    private javax.swing.JLabel firstname;
    private javax.swing.JLabel firstname_lb;
    private javax.swing.JButton homeScreenBackButton;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JTextField lastNameStaff_tb;
    private javax.swing.JTextField lastNameStudent_lb;
    private javax.swing.JLabel lastName_lb;
    private javax.swing.JLabel lastname;
    private javax.swing.JLabel password1lb;
    private javax.swing.JLabel passwordAdmin_lb;
    private javax.swing.JTextField passwordAdmin_tb;
    private javax.swing.JLabel passwordConfirm;
    private javax.swing.JTextField passwordConfirmStudent_lb;
    private javax.swing.JTextField passwordConfirmationStaff_tb;
    private javax.swing.JTextField passwordConfirmtStaff_tb;
    private javax.swing.JTextField passwordStudent_lb;
    private javax.swing.JLabel password_lb;
    private javax.swing.JPasswordField passwordtbHidden;
    private javax.swing.JTextField schoolIDstaff_tb;
    private javax.swing.JLabel schoolId_lb;
    private javax.swing.JLabel schoolName;
    private javax.swing.JTextField schoolNameAdmin_tb;
    private javax.swing.JLabel schoolid;
    private javax.swing.JTextField schoolidStudent_lb;
    private javax.swing.JPanel sidePanelAdmin;
    private javax.swing.JPanel sidePanelStudent;
    private javax.swing.JPanel signPanelStaff;
    private javax.swing.JButton staffSubmit_bt;
    private javax.swing.JButton staffbt;
    private javax.swing.JButton studentbt;
    private javax.swing.JButton submitAdminbt;
    private javax.swing.JButton submitStudent_bt;
    private javax.swing.JTextField usernametb;
    // End of variables declaration//GEN-END:variables

    private void login(){
        String username = usernametb.getText();
        String password = passwordtbHidden.getText();
        

        //checks that username and password have a value in which is not the default
        if (!"".equals(username) && !"Username".equals(username) && username.length()>1 &&
                !"".equals(password)&& !"Password".equals(password)){
            //password and username can be checked against database
            //check the type of account
            
            if(username.substring(0, 2).equals("ST")){
                
                
                //get the student usernames form the database
                String SQL = "SELECT * FROM \"ExamTime\".students";
                String columnLabel = "username";
                List<String> usernameList = (readFromDatabase.readDatabase(SQL, columnLabel));
                
                
                //get the username being tested
                String test = username.substring(2);
                if (usernameList.contains(test)){
                    //the username is valid
                    Integer index = usernameList.indexOf(test);

                    String columnLabel2 = "password";
                    List<String> passwordList = (readFromDatabase.readDatabase(SQL, columnLabel2));
                    //test if the password matches the username
                    if(passwordList.get(index).equals(password)){
                        
                        //get the student id
                        String SQLid = String.format("SELECT studentid FROM \"ExamTime\".students WHERE username = '%s'",
                                test);
                        String columnLabel3 = "studentid";
                        id = (readFromDatabase.readDatabase(SQLid, columnLabel3));
                        this.dispose();
                        new StudentHomeScreen().setVisible(true);
                        
                        JOptionPane.showMessageDialog(null, 
                              "Welcome", 
                              "Valid", 
                              JOptionPane.INFORMATION_MESSAGE);
                        //open the student home screen
                        
                        
                        
                    }else{
                        JOptionPane.showMessageDialog(null, 
                              "Password not valid", 
                              "Error", 
                              JOptionPane.WARNING_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, 
                              "Username not valid", 
                              "Error", 
                              JOptionPane.WARNING_MESSAGE);
                }
                
            }else if (username.substring(0, 2).equals("TE")){
                //get the teachers usernames form the database
                String SQL = "SELECT * FROM \"ExamTime\".teachers";
                String columnLabel = "username";
                List<String> usernameList = (readFromDatabase.readDatabase(SQL, columnLabel));
                //get the username being tested
                String test = username.substring(2);
                if (usernameList.contains(test)){
                    //the username is valid
                    Integer index = usernameList.indexOf(test);
                    String columnLabel2 = "password";
                    List<String> passwordList = (readFromDatabase.readDatabase(SQL, columnLabel2));
                    //test if the password matches the username
                    if(passwordList.get(index).equals(password)){
                        
                        //get the teacher id
                        String SQLid = String.format("SELECT teacherid FROM \"ExamTime\".teachers WHERE username = '%s'",
                                test);
                        String columnLabel3 = "teacherid";
                        id = (readFromDatabase.readDatabase(SQLid, columnLabel3));
                        this.dispose();
                        new TeacherHomeScreen().setVisible(true);
                        
                        JOptionPane.showMessageDialog(null, 
                              "Welcome", 
                              "Valid", 
                              JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(null, 
                              "Password not valid", 
                              "Error", 
                              JOptionPane.WARNING_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, 
                              "Username not valid", 
                              "Error", 
                              JOptionPane.WARNING_MESSAGE);
                }
            
                    
            }else if(username.substring(0, 2).equals("AD")){

                //get the student usernames form the database
                String SQL = "SELECT * FROM \"ExamTime\".admins";
                String columnLabel = "username";
                List<String> usernameList = (readFromDatabase.readDatabase(SQL, columnLabel));
                //get the username being tested
                String test = username.substring(2);
                if (usernameList.contains(test)){
                    //the username is valid
                    Integer index = usernameList.indexOf(test);
                    String columnLabel2 = "password";
                    List<String> passwordList = (readFromDatabase.readDatabase(SQL, columnLabel2));
                    //test if the password matches the username
                    if(passwordList.get(index).equals(password)){
                        //get the school id
                        String sqlid = String.format("SELECT * FROM \"ExamTime\".admins WHERE username = '%s'", test);
                                
                        String columnLabel3 = "schoolid";
                        id = (readFromDatabase.readDatabase(sqlid, columnLabel3));
                        
                        
                        this.dispose();
                        new AdminHomeScreen().setVisible(true);
                        
                        JOptionPane.showMessageDialog(null, 
                              "Welcome", 
                              "Valid", 
                              JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(null, 
                              "Password not valid", 
                              "Error", 
                              JOptionPane.WARNING_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, 
                              "Username not valid", 
                              "Error", 
                              JOptionPane.WARNING_MESSAGE);
                }

            }else{
                JOptionPane.showMessageDialog(null, 
                                  "Username identifier not valid", 
                                  "Error", 
                                  JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, 
                                  "Password or username not valid", 
                                  "Error", 
                                  JOptionPane.WARNING_MESSAGE);
        }
        
        
    }
    
    private void cleanUpRoutineStaff() {
        firstNameStaff_tb.setText("firstname");
        lastNameStaff_tb.setText("lastname");
        schoolIDstaff_tb.setText("schoolID");
        passwordConfirmtStaff_tb.setText("password");
        passwordConfirmationStaff_tb.setText("password");
    }
    private void cleanUpRoutineAdmin() {
        schoolNameAdmin_tb.setText("school name");
        passwordAdmin_tb.setText("password");
        confirmPasswordAdmin_lb.setText("confirm password");
    }
    
    private void cleanUpRoutineStudents() {
        firstNameStudent_lb.setText("firstname");
        lastNameStudent_lb.setText("lastname");
        schoolidStudent_lb.setText("schoolID");
        passwordStudent_lb.setText("password");
        passwordConfirmStudent_lb.setText("password");
    }
    
    private void staffSignUp(){
        // get the data from the text boxes
        String firstName = firstNameStaff_tb.getText();
        String lastName = lastNameStaff_tb.getText();
        String schoolID = schoolIDstaff_tb.getText();
        String password = passwordConfirmtStaff_tb.getText();
        String passwordConfirmation = passwordConfirmationStaff_tb.getText();
        
        //check that all the variables have a value and are not left as the defult
        // and that the passwords match
        if (firstName.equals("") || firstName.equals("firstname")||lastName.equals("") || 
                lastName.equals("lastName") ||schoolID.equals("") || schoolID.equals("schoolID")
                || password.equals("") || passwordConfirmation.equals("")|| 
                //check that the passwords match and are not left empty
                !(password.equals(passwordConfirmation)) || password.length()<6){
            //the details are no accepted 
            JOptionPane.showMessageDialog(null, 
                              "Please enter all details and make sure passwords match", 
                              "Error", 
                              JOptionPane.WARNING_MESSAGE);
            
        }else{
            //the details are accepted initally
            //variable to make sure username is valid
            Boolean valid = true;
            
            //make the username
            String username = firstName.substring(0,1).toUpperCase() + "."+
                    lastName.substring(0,1).toUpperCase()+lastName.substring(1).toLowerCase();
            
            //get the usernames from the database
            String SQL = "SELECT * FROM \"ExamTime\".teachers";
            String columnLabel = "username";
            List<String> usernameList = (readFromDatabase.readDatabase(SQL, columnLabel));
            Integer counter = 1;
            //check to see if the user name already exists
            if (usernameList.contains(username)){
                //do they want to continue e.g. they have the same name and surname by coincidence?
                int a = JOptionPane.showConfirmDialog(SignUpPanel,
                        "A user already exists with this username are you sure you do not already have an account?");
                if (!(a==JOptionPane.YES_OPTION)){
                    //the user does not want to continue do not continue adding to database
                    valid = false;
                }else{
                    //generate a unique username
                    username = username + counter;
                    while (usernameList.contains(username)){
                        //keep incrementing the number on the end until unique
                        //removes the last letter 
                        username =StringUtils.chop(username) + counter; 
                        counter +=1;
                    }

                }
            }
            //if the everything is good keep checking details 
            if(valid == true){
                //make sure the school id exists
                String SQL2 = "SELECT * FROM \"ExamTime\".admins";
                String columnLabel2 = "schoolid";
                List<String> schoolidList = (readFromDatabase.readDatabase(SQL2, columnLabel2));
                //make sure the school id they said exists
                if (!(schoolidList.contains(schoolID))){
                    //school id does not exist
                    JOptionPane.showMessageDialog(null, 
                                  "School id not valid", 
                                  "Error", 
                                  JOptionPane.WARNING_MESSAGE);
                }else{
                    //the inputs are acceptable so the data can be entered into the database
                    String SQL3 = String.format("INSERT INTO \"ExamTime\".teachers (firstname, lastname, "
                            + "\"password\", schoolid, username) VALUES('%s', '%s', '%s', '%s', '%s');",
                            firstName, lastName, password, schoolID, username);
                    writeToDatabase(SQL3);
                    String message = String.format("Your account hase been created, your username is TE%s", username);
                    JOptionPane.showMessageDialog(null, 
                              message, 
                              "Welcome", 
                              JOptionPane.INFORMATION_MESSAGE);

                    //clear the screen for new input
                    cleanUpRoutineStaff();
                
                }
            }
        }
    }
    
    private void studentSignUp(){
        // TODO add your handling code here:
        // get the data from the text boxes
        String firstName = firstNameStudent_lb.getText();
        String lastName = lastNameStudent_lb.getText();
        String schoolID = schoolidStudent_lb.getText();
        String password = passwordStudent_lb.getText();
        String passwordConfirmation = passwordConfirmStudent_lb.getText();
        
        //check that all the variables have a value and are not left as the defult
        // and that the passwords match
        if (firstName.equals("") || firstName.equals("firstname")||lastName.equals("") 
                || lastName.equals("lastName") ||schoolID.equals("") || schoolID.equals("schoolID") 
                || password.equals("") || passwordConfirmation.equals("")||
            //check that the passwords match and are not left empty
            !(password.equals(passwordConfirmation)) || password.length()<6){
            //the details are no accepted
            JOptionPane.showMessageDialog(null,
                "Please enter all details and make sure passwords match",
                "Error",
                JOptionPane.WARNING_MESSAGE);

        }else{
            //the details are accepted initally
            //variable to make sure username is valid
            Boolean valid = true;

            //make the username
            Integer counter = 1;
            String username = lastName.substring(0,1).toUpperCase()+lastName.substring(1,4).toLowerCase()
            +firstName.substring(0,1).toUpperCase() + counter;

            //get the usernames from the database
            String SQL = "SELECT * FROM \"ExamTime\".students";
            String columnLabel = "username";
            List<String> usernameList = (readFromDatabase.readDatabase(SQL, columnLabel));

            //check to see if the user name already exists
            if (usernameList.contains(username)){
                
                //do they want to continue e.g. they have the same name and surname by coincidence?
                int a = JOptionPane.showConfirmDialog(SignUpPanel,
                    "A user already exists with this username do you want to continue (a new username will be made)?");
                if (!(a==JOptionPane.YES_OPTION)){
                    //the user does not want to continue do not continue adding to database
                    valid = false;
                }else{
                    while (usernameList.contains(username)){
                        //generate a unique username
                        username = username.substring(0,5) + (Integer.valueOf(username.substring(5))+counter);
                        
                    }

                }
            }

            //if the everything is good keep checking details
            if(valid == true){
                //make sure the school id exists
                String SQL2 = "SELECT * FROM \"ExamTime\".admins";
                String columnLabel2 = "schoolid";
                List<String> schoolidList = (readFromDatabase.readDatabase(SQL2, columnLabel2));
                //make sure the school id they said exists
                if (!(schoolidList.contains(schoolID))){
                    //school id does not exist
                    JOptionPane.showMessageDialog(null,
                        "School id not valid",
                        "Error",
                        JOptionPane.WARNING_MESSAGE);
                }else{
                    //the inputs are acceptable so the data can be entered into the database
                    String SQL3 = String.format("INSERT INTO \"ExamTime\".students "
                        + "(firstname, lastname, \"password\", schoolid, username) VALUES('%s', '%s', '%s', '%s', '%s');",
                        firstName, lastName, password, schoolID, username);
                    writeToDatabase(SQL3);
                    String message = String.format("Your account hase been created, your username is ST%s", username);
                    JOptionPane.showMessageDialog(null,
                        message,
                        "Welcome",
                        JOptionPane.INFORMATION_MESSAGE);

                    //clear the screen for new input
                    cleanUpRoutineStudents();

                }
            }
        }
    }
    
    private void AdminSignUp(){
        //get the variables
        String name = schoolNameAdmin_tb.getText();
        String password = passwordAdmin_tb.getText();
        String confirmPassword = confirmPasswordAdmin_lb.getText();
        
        //make sure nothing left empty or as default
        if (!(name.equals("")|| name.equals("school name") || password.equals("") ||
                password.equals("password") ||confirmPassword.equals("") || 
                confirmPassword.equals("confirm password") || 
                // orpasswords do not match
                !password.equals(confirmPassword) || password.length()<6)){
            //the details are correct
            
            //check the school name is not already in the database
            String SQL = "SELECT * FROM \"ExamTime\".admins";
            String columnLabel = "name";
            List<String> nameList = (readFromDatabase.readDatabase(SQL, columnLabel));
            Boolean valid = true;
            if(nameList.contains(name)){
                //the name is already in the database
                int a = JOptionPane.showConfirmDialog(SignUpPanel,
                    "This name already exists do you want to continue?");
                if (!(a==JOptionPane.YES_OPTION)){
                    valid = false;
                    
                }
            }
            
            if (valid == true){
                //create a new unique username consisting of 7 numbers 
                valid = false;
                String schoolID = "";
                while (valid == false){
                    Random rand = new Random();
                    Integer upper = 10;
                    Integer int_random;
                    for (int i =0;i<7;i++){
                        int_random = rand.nextInt(upper);
                        schoolID = schoolID + int_random.toString();
                    }

                    //check if the username is already in the database
                    String columnLabel2 = "schoolid";
                    List<String> idList = (readFromDatabase.readDatabase(SQL, columnLabel2));

                    if (!(idList.contains(schoolID))){
                        valid = true;
                        //break out of while loop
                    }
                }
                
                //create username - school name with no spaces
                String username = name.replaceAll(" ", "");

                //add account to the database
                String SQL2 = String.format("INSERT INTO \"ExamTime\".admins "
                        + "(schoolid, \"name\", \"password\", username) VALUES('%s', '%s', '%s', '%s');",
                        schoolID, name, password, username);
                
                
                writeToDatabase(SQL2);
                //message to the user to say the account has been created 
                String message = String.format("Your account hase been created!\nUSERNAME = AD%s\nSCHOOLID = %s", 
                        username,schoolID);
                JOptionPane.showMessageDialog(null,
                    message,
                    "Welcome",
                    JOptionPane.INFORMATION_MESSAGE);
                
            }else{
                JOptionPane.showMessageDialog(null,
                "Account not created",
                "Error",
                JOptionPane.WARNING_MESSAGE);
            }

        }else{
            //the details are incorrect
            JOptionPane.showMessageDialog(null,
                        "Please enter all details correctly",
                        "Error",
                        JOptionPane.WARNING_MESSAGE);
        }
        
        
    }
}
